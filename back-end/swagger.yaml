openapi: 3.0.3
info:
  title: APIs tisco - OpenAPI 3.0
  description: APIs for tisco
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
  - url: http://159.138.242.188:3000/api/v1
tags:
  - name: account
    description: Everything about your Account
  - name: authen
    description: Everything about your Authen
  - name: consent
    description: Everything about your Consent
  - name: content
    description: Everything about your Content
  - name: health-check
    description: Everything about your Health check
  - name: require
    description: Everything about your Require
  - name: term
    description: Everything about your Term
  - name: game-board
    description: Everything about your Game Board
components:
  securitySchemes:
    beareAuth:
        type: http
        scheme: bearer
        name: Authorization
        in: header
        bearerFormat: JWT
        description: >-
          Enter the token with the `Bearer: ` prefix, e.g. "Bearer abcde12345"
  responses: 
    UnauthorizedError:
      description: Access token is missing or invalid
  schemas:
    Account:
      type: object
      properties:
        hasPassword:
          type: boolean
        accId:
          type: integer
        uuidAccount:
          type: string
        compCode:
          type: string
        condiVersion:
          type: string
        condiAccept:
          type: integer
        accPicture:
          type: string
          nullable: true
        accFirstname:
          type: string
        accLastname:
          type: string
          nullable: true
        active:
          type: boolean
        createdBy:
          type: string
        updatedBy:
          type: string
        createdDatetime:
          type: string
          format: date-time
        updatedDatetime:
          type: string
          format: date-time
        chanelLogin:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              uuidAccount:
                type: string
              loginPlatform:
                type: string
              loginData:
                type: string
              loginVerify:
                type: integer
              loginSecret:
                type: string
                nullable: true
              lineClientId:
                type: string
                nullable: true
              targetConsentCode:
                type: string
                nullable: true
              targetConsentVersion:
                type: string
                nullable: true
              acceptStatus:
                type: integer
              status:
                type: string
              isDefault:
                type: boolean
              isLineLiff:
                type: boolean
              active:
                type: boolean
              lastLogin:
                type: string
                format: date-time
              createdBy:
                type: string
              updatedBy:
                type: string
              createdDatetime:
                type: string
                format: date-time
              updatedDatetime:
                type: string
                format: date-time
        peronaIcon:
          type: object
          properties:
            iconId:
              type: integer
            iconLevel:
              type: integer
            iconName:
              type: string
            iconImage:
              type: object
              properties:
                size:
                  type: integer
                type:
                  type: string
                object:
                  type: string
                fileUrl:
                  type: string
                newName:
                  type: string
                originalName:
                  type: string
            iconDetail:
              type: string
            iconMinScore:
              type: integer
            iconMaxScore:
              type: integer
            active:
              type: boolean
            createdBy:
              type: string
            updatedBy:
              type: string
            createdDatetime:
              type: string
              format: date-time
            updatedDatetime:
              type: string
              format: date-time

paths:
  /accounts:
    get:
      tags:
        - account
      security:
        - beareAuth: []
      summary: "Get profile information"
      description: "Retrieves profile information of the currently logged-in user."
      responses:
        '200':
          description: "Profile information retrieved successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
            application/xml:
              schema:
                $ref: '#/components/schemas/Account'
  /accounts/update-profile:
    put:
      tags:
        - account
      security:
        - beareAuth: []
      summary: "Update account information"
      description: "Updates the profile information of the currently logged-in user."
      parameters:
        - name: "accPicture"
          description: "Account picture URL"
          required: false
          schema:
            type: "string"
        - name: "accFirstname"
          description: "Account first name"
          required: false
          schema:
            type: "string"
        - name: "compCode"
          description: "Company code"
          required: false
          schema:
            type: "string"
      responses:
        200:
          description: "Account information updated successfully"
  /accounts/lock-password:
    patch:
      tags:
        - account
      security:
        - beareAuth: []
      summary: "Lock password"
      description: "Locks the password of the currently logged-in user."
      responses:
        200:
          description: "Password locked successfully"
  /accounts/forgot-pwd:
    put:
      tags:
        - account
      security:
        - beareAuth: []
      summary: "Save forgot password"
      description: "Saves the new password for the currently logged-in user."
      parameters:
        - name: "accPassword"
          description: "New account password"
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "Password updated successfully"
  /accounts/code-company:
    put:
      tags:
        - account
      security:
        - beareAuth: []
      summary: "Change code company"
      description: "Changes the company code associated with the currently logged-in user."
      parameters:
        - name: "code"
          description: "New company code"
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "Company code changed successfully"
  /accounts/disconnect:
    post:
      tags:
        - account
      security:
        - beareAuth: []
      summary: "Save disconnected channel login"
      description: "Saves the disconnected channel login information for the currently logged-in user."
      parameters:
        - name: "chanelId"
          description: "Channel ID to disconnect"
          required: true
          schema:
            type: "integer"
      responses:
        200:
          description: "Channel login disconnected successfully"
  /accounts/connect:
    post:
      tags:
        - account
      security:
        - beareAuth: []
      summary: "Save connected channel login"
      description: "Saves the connected channel login information for the currently logged-in user."
      parameters:
        - name: "loginData"
          description: "Login data for the new channel"
          required: true
          schema:
            type: "object"
        - name: "loginPlatform"
          description: "Login platform for the new channel"
          required: true
          schema:
            type: "string"
            enum: ["EMAIL", "PHONE", "LINE"]
      responses:
        200:
          description: "Channel login connected successfully"
  /authen:
    post:
      tags:
        - authen
      summary: "Login Email/Phone"
      description: "Authenticate users via email or phone number."
      parameters:
        - name: "action"
          description: "Action type (AUTHEN or AUTHEN_CONFIRM)"
          required: true
          schema:
            type: "string"
        - name: "userName"
          description: "Email address or phone number"
          required: true
          schema:
            type: "string"
        - name: "passWord"
          description: "User password"
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "Login successful"
  /authen/authen-confirm:
    post:
      tags:
        - authen
      summary: "Confirm Email/Phone"
      description: "Confirm authentication via email or phone number."
      parameters:
        - name: "action"
          description: "Action type (AUTHEN_CONFIRM)"
          required: true
          schema:
            type: "string"
        - name: "userName"
          description: "Email address or phone number"
          required: true
          schema:
            type: "string"
        - name: "passWord"
          description: "User password"
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "Authentication confirmed"
  /authen/create-account:
    post:
      tags:
        - authen
      summary: "Create Account"
      description: "Create a new user account via email or phone number."
      parameters:
        - name: "action"
          description: "Action type (CREATE_ACCOUNT)"
          required: true
          schema:
            type: "string"
        - name: "userName"
          description: "Email address or phone number"
          required: true
          schema:
            type: "string"
        - name: "passWord"
          description: "User password"
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "Account created successfully"
  /authen/line:
    post:
      tags:
        - authen
      summary: "Login via LINE"
      description: "Authenticate users via LINE messaging platform."
      parameters:
        - name: "action"
          description: "Action type (AUTHEN_LINE)"
          required: true
          schema:
            type: "string"
        - name: "loginData"
          description: "LINE login data"
          required: true
          schema:
            type: "object"
      responses:
        200:
          description: "Login via LINE successful"
  /authen/test:
    get:
      tags:
        - authen
      summary: "Test Endpoint"
      description: "Test endpoint for verifying functionality."
      responses:
        200:
          description: "Test successful"
  /consent/version:
    post:
      tags:
        - consent
      security:
        - beareAuth: []
      summary: Check version of consent
      operationId: checkConsentVersion
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  isAcceptConsent:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /consent/get-consent:
    get:
      tags:
        - consent
      security:
        - beareAuth: []
      summary: Get consent
      operationId: getConsent
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  consent:
                    type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /consent/save-consent:
    post:
      tags:
        - consent
      security:
        - beareAuth: []
      summary: Save consent
      operationId: saveConsent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authen:
                  type: object
                  properties:
                    uuid:
                      type: string
                option:
                  type: integer
                # Add other properties as needed
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  save:
                    type: boolean
                  saveMember:
                    type: object
                  verifyMember:
                    type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /content:
    get:
      tags:
        - content
      summary: Get content
      operationId: getContent
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string   
  /health-check:
    get:
      tags:
        - health-check
      security:
        - beareAuth: []
      summary: Get all questions and answers
      operationId: getAllHealthCheck
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    question:
                      type: string
                    answers:
                      type: array
                      items:
                        type: object
                        properties:
                          answer:
                            type: string
                          ansScore:
                            type: integer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    # post:
    #   tags:
    #     - health-check
    #   security:
    #     - beareAuth: []
    #   summary: Create health check question
    #   operationId: createHealthCheckQuestion
    #   requestBody:
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           type: object
    #           properties:
    #             question:
    #               type: string
    #           required:
    #             - question
    #   responses:
    #     '200':
    #       description: OK
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               question:
    #                 type: string
    #               createdAt:
    #                 type: string
    #     '400':
    #       description: Bad Request
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               message:
    #                 type: string
  # /health-check/create-answer:
  #   post:
  #     tags:
  #       - health-check
  #     security:
  #       - beareAuth: []
  #     summary: Create health check answer
  #     operationId: createHealthCheckAnswer
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               answer:
  #                 type: string
  #               ansScore:
  #                 type: integer
  #             required:
  #               - answer
  #               - ansScore
  #     responses:
  #       '200':
  #         description: OK
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 answer:
  #                   type: string
  #                 ansScore:
  #                   type: integer
  #                 createdAt:
  #                   type: string
  #       '400':
  #         description: Bad Request
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 message:
  #                   type: string
  /health-check/save-answer:
    post:
      tags:
        - health-check
      security:
        - beareAuth: []
      summary: Save health check answer
      operationId: saveHealthCheckAnswer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hcHisSystem:
                  type: object
                hcHisAnswer:
                  type: array
                  items:
                    type: object
                    properties:
                      question:
                        type: string
                      answers:
                        type: array
                        items:
                          type: object
                          properties:
                            answer:
                              type: string
                            ansScore:
                              type: integer
                    required:
                    - question
                    - answers
                hcTypeRule:
                  type: string
                hcScoreInitil:
                  type: number
                hcHisScore:
                  type: number
              required:
                - hcHisSystem
                - hcHisAnswer
                - hcTypeRule
                - hcScoreInitil
                - hcHisScore
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  save:
                    type: boolean
                  peronaIcon:
                    type: object
                    properties:
                      iconId:
                        type: integer
                      createdAt:
                        type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /require/sent-otp:
    post:
      tags:
        - require
      security:
        - beareAuth: []
      summary: Send OTP
      operationId: sendOtp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum: [OTP]
                input:
                  type: string
              required:
                - action
                - input
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  secret:
                    type: string
                  type:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /require/verify-otp:
    post:
      tags:
        - require
      security:
        - beareAuth: []
      summary: Verify OTP
      operationId: verifyOtp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: string
                secret:
                  type: string
              required:
                - otp
                - secret
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  isValid:
                    type: boolean
                  response_code:
                    type: string
                  message:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string   
  /term:
    get:
      tags:
        - term
      summary: Get term and condition
      operationId: getTermAndCondition
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  term:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /game/categories:
    get:
      tags:
        - game-board
      security:
        - beareAuth: []
      summary: Get categories
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      type: string
  /game/board-by-cate:
    get:
      tags:
        - game-board
      security:
        - beareAuth: []
      summary: Get board game by categories
      parameters:
        - in: path
          name: ids
          description: Comma-separated list of category IDs
          schema:
            type: string
      responses:
        '200':
          description: Success
  /game/board/{id}:
    get:
      tags:
        - game-board
      security:
        - beareAuth: []
      summary: Get game board
      parameters:
        - in: path
          name: id
          description: ID of the game board
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /game/save-answer:
    post:
      tags:
        - game-board
      security:
        - beareAuth: []
      summary: Save game board answer
      operationId: createHistory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gmBoardId: 
                  type: number
                gmGameLevel:
                  type: number
                gmScore:  
                  type: number
                gmHisSystem:
                  type: object
                gmHisRecord:
                  type: array
                  items:
                    type: object
                    properties:
                      question:
                        type: string
                      answers:
                        type: array
                        items:
                          type: object
                          properties:
                            answer:
                              type: string
                            ansScore:
                              type: integer
                    required:
                    - question
                    - answers
              required:
                - gmBoardId
                - gmGameLevel
                - gmScore
                - gmHisSystem
                - gmHisRecord
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  
  
